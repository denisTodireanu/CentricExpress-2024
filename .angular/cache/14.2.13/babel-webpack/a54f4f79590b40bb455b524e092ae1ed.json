{"ast":null,"code":"import { UntypedFormControl } from '@angular/forms';\nimport { AuthenticationService } from '../services/authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/shared/services\";\nimport * as i5 from \"@angular/common\";\n\nfunction AuthenticationComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2, \"Full name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nexport let AuthenticationComponent = /*#__PURE__*/(() => {\n  class AuthenticationComponent {\n    constructor(router, authenticationService, formBuilder, userService) {\n      this.router = router;\n      this.authenticationService = authenticationService;\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.isSetRegistered = false;\n      this.isAdmin = false;\n      this.formGroup = this.formBuilder.group({\n        email: new UntypedFormControl(null),\n        password: new UntypedFormControl(null),\n        fullName: new UntypedFormControl(null)\n      });\n      this.userService.username.next('');\n    }\n\n    setRegister() {\n      this.isSetRegistered = !this.isSetRegistered;\n    }\n\n    setAdmin() {\n      this.isAdmin = !this.isAdmin;\n    }\n\n    authenticate() {\n      if (this.isSetRegistered) {\n        const data = this.formGroup.getRawValue();\n        this.authenticationService.register(data).subscribe(() => {\n          this.userService.username.next(data.email);\n          this.router.navigate(['dashboard']);\n        });\n      } else {\n        const data = this.formGroup.getRawValue();\n        this.formGroup.removeControl('fullName');\n        this.authenticationService.login(data).subscribe(logData => {\n          localStorage.setItem('userToken', JSON.stringify(logData.token));\n          this.userService.username.next(data.email);\n          this.router.navigate(['dashboard']);\n        });\n      }\n    }\n\n  }\n\n  AuthenticationComponent.ɵfac = function AuthenticationComponent_Factory(t) {\n    return new (t || AuthenticationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n\n  AuthenticationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthenticationComponent,\n    selectors: [[\"app-authentication\"]],\n    features: [i0.ɵɵProvidersFeature([AuthenticationService])],\n    decls: 23,\n    vars: 5,\n    consts: [[1, \"authentication-container\"], [\"src\", \"assets/images/sign_in.svg\"], [1, \"authentication-content\", 3, \"formGroup\"], [1, \"login-label\"], [\"formControlName\", \"email\", \"type\", \"email\"], [\"formControlName\", \"password\", \"type\", \"password\"], [4, \"ngIf\"], [1, \"not-registered\"], [\"type\", \"checkbox\", 3, \"click\"], [1, \"admin\"], [\"type\", \"button\", 3, \"click\"], [\"formControlName\", \"fullName\", \"type\", \"text\"]],\n    template: function AuthenticationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, AuthenticationComponent_ng_container_11_Template, 4, 0, \"ng-container\", 6);\n        i0.ɵɵelementStart(12, \"span\", 7)(13, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function AuthenticationComponent_Template_input_click_13_listener() {\n          return ctx.setRegister();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"span\", 9)(17, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function AuthenticationComponent_Template_input_click_17_listener() {\n          return ctx.setAdmin();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19, \"I want to be an admin\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AuthenticationComponent_Template_button_click_20_listener() {\n          return ctx.authenticate();\n        });\n        i0.ɵɵelementStart(21, \"span\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isSetRegistered ? \"Register\" : \"Log in\", \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSetRegistered);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.isSetRegistered ? \"Go back to log in\" : \"I am not registered yet\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.isSetRegistered ? \"Register\" : \"Login\");\n      }\n    },\n    dependencies: [i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], label[_ngcontent-%COMP%], p[_ngcontent-%COMP%], div[_ngcontent-%COMP%], span[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{font-family:Open Sans!important;color:#3a4870!important}.flex-row-start[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:start}.flex-row-end[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:end}.flex-row-center[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center}.flex-row-space-betwen[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between}.flex-row-space-around[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-around}.flex-row-space-evenly[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-evenly}.authentication-container[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;align-items:center;justify-content:space-around}.authentication-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:35%}.authentication-container[_ngcontent-%COMP%]   .login-label[_ngcontent-%COMP%]{font-size:30px;font-family:Open Sans;margin-top:20px;margin-bottom:40px}.authentication-container[_ngcontent-%COMP%]   .not-registered[_ngcontent-%COMP%], .admin[_ngcontent-%COMP%]{width:40%;font-family:Open Sans;font-size:14px;display:flex;justify-content:center;align-items:center}.authentication-container[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{width:auto!important;width:initial!important;height:20px!important;margin-bottom:0!important}.authentication-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{border:0}.authentication-content[_ngcontent-%COMP%]{display:flex;width:50%;max-height:80%;align-items:center;justify-content:center;flex-direction:column;background-color:#fff;border-radius:8px;box-shadow:0 0 8px #00175714}.authentication-container[_ngcontent-%COMP%]   .authentication-content[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:50%;height:30px;margin-bottom:20px;font-family:Open Sans;border:1px solid #e3e9f7;border-radius:8px;outline:none}.authentication-container[_ngcontent-%COMP%]   .authentication-content[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-family:Open Sans}.authentication-container[_ngcontent-%COMP%]   .authentication-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#27ae60;border:0;outline:0;cursor:pointer;width:20%;height:40px;margin-bottom:20px;border-radius:8px;font-family:Open Sans;font-weight:700}.authentication-container[_ngcontent-%COMP%]   .authentication-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:16px;color:#fff!important}@media (max-width: 900px){.authentication-container[_ngcontent-%COMP%]{flex-direction:column}}\"]\n  });\n  return AuthenticationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}